{
    "engineConfig": {
        "defaultFlushInterval": "500",
        "datasourceConfigurations": [
            {
                "kind": "GRAPHQL",
                "rootNodes": [
                    {
                        "typeName": "Post",
                        "fieldNames": [
                            "id",
                            "content",
                            "authorId"
                        ]
                    },
                    {
                        "typeName": "Query",
                        "fieldNames": [
                            "posts",
                            "post"
                        ]
                    }
                ],
                "overrideFieldPathFromAlias": true,
                "customGraphql": {
                    "fetch": {
                        "url": {
                            "staticVariableContent": "http://localhost:4001/graphql"
                        },
                        "method": "POST",
                        "body": {},
                        "baseUrl": {},
                        "path": {}
                    },
                    "subscription": {
                        "enabled": true,
                        "url": {
                            "staticVariableContent": "http://localhost:4001/graphql"
                        },
                        "protocol": "GRAPHQL_SUBSCRIPTION_PROTOCOL_WS",
                        "websocketSubprotocol": "GRAPHQL_WEBSOCKET_SUBPROTOCOL_AUTO"
                    },
                    "federation": {
                        "enabled": true,
                        "serviceSdl": "type Post @key(fields: \"id\") {\n  id: ID!\n  content: String\n  authorId: ID!\n}\n\ntype Query {\n  posts: [Post!]!\n  post(id: ID!): Post\n}\n"
                    },
                    "upstreamSchema": {
                        "key": "148cae0c5b5b812ee3ec8e368862577ba4bfd15d"
                    }
                },
                "requestTimeoutSeconds": "10",
                "id": "0",
                "keys": [
                    {
                        "typeName": "Post",
                        "selectionSet": "id"
                    }
                ]
            },
            {
                "kind": "GRAPHQL",
                "rootNodes": [
                    {
                        "typeName": "User",
                        "fieldNames": [
                            "id",
                            "name"
                        ]
                    },
                    {
                        "typeName": "Post",
                        "fieldNames": [
                            "id",
                            "author"
                        ],
                        "externalFieldNames": [
                            "authorId"
                        ]
                    },
                    {
                        "typeName": "Query",
                        "fieldNames": [
                            "users",
                            "user"
                        ]
                    }
                ],
                "overrideFieldPathFromAlias": true,
                "customGraphql": {
                    "fetch": {
                        "url": {
                            "staticVariableContent": "http://localhost:4002/graphql"
                        },
                        "method": "POST",
                        "body": {},
                        "baseUrl": {},
                        "path": {}
                    },
                    "subscription": {
                        "enabled": true,
                        "url": {
                            "staticVariableContent": "http://localhost:4002/graphql"
                        },
                        "protocol": "GRAPHQL_SUBSCRIPTION_PROTOCOL_WS",
                        "websocketSubprotocol": "GRAPHQL_WEBSOCKET_SUBPROTOCOL_AUTO"
                    },
                    "federation": {
                        "enabled": true,
                        "serviceSdl": "type User @key(fields: \"id\") {\n  id: ID!\n  name: String!\n}\n\ntype Post @key(fields: \"id\") {\n  id: ID!\n  authorId: ID! @external\n  author: User! @requires(fields: \"authorId\")\n}\n\ntype Query {\n  users: [User!]!\n  user(id: ID!): User\n}\n"
                    },
                    "upstreamSchema": {
                        "key": "d7822358d4793d6bf395d1f186766d904591de4a"
                    }
                },
                "requestTimeoutSeconds": "10",
                "id": "1",
                "keys": [
                    {
                        "typeName": "User",
                        "selectionSet": "id"
                    },
                    {
                        "typeName": "Post",
                        "selectionSet": "id"
                    }
                ],
                "requires": [
                    {
                        "typeName": "Post",
                        "fieldName": "author",
                        "selectionSet": "authorId"
                    }
                ]
            }
        ],
        "fieldConfigurations": [
            {
                "typeName": "Query",
                "fieldName": "post",
                "argumentsConfiguration": [
                    {
                        "name": "id",
                        "sourceType": "FIELD_ARGUMENT"
                    }
                ]
            },
            {
                "typeName": "Query",
                "fieldName": "user",
                "argumentsConfiguration": [
                    {
                        "name": "id",
                        "sourceType": "FIELD_ARGUMENT"
                    }
                ]
            }
        ],
        "graphqlSchema": "schema {\n  query: Query\n}\n\ndirective @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\ntype Post {\n  id: ID!\n  content: String\n  authorId: ID!\n  author: User!\n}\n\ntype Query {\n  posts: [Post!]!\n  post(id: ID!): Post\n  users: [User!]!\n  user(id: ID!): User\n}\n\ntype User {\n  id: ID!\n  name: String!\n}",
        "stringStorage": {
            "148cae0c5b5b812ee3ec8e368862577ba4bfd15d": "schema {\n  query: Query\n}\n\ndirective @extends on INTERFACE | OBJECT\n\ndirective @external on FIELD_DEFINITION | OBJECT\n\ndirective @key(fields: openfed__FieldSet!, resolvable: Boolean = true) repeatable on INTERFACE | OBJECT\n\ndirective @provides(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @requires(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\ntype Post @key(fields: \"id\") {\n  authorId: ID!\n  content: String\n  id: ID!\n}\n\ntype Query {\n  post(id: ID!): Post\n  posts: [Post!]!\n}\n\nscalar openfed__FieldSet",
            "d7822358d4793d6bf395d1f186766d904591de4a": "schema {\n  query: Query\n}\n\ndirective @extends on INTERFACE | OBJECT\n\ndirective @external on FIELD_DEFINITION | OBJECT\n\ndirective @key(fields: openfed__FieldSet!, resolvable: Boolean = true) repeatable on INTERFACE | OBJECT\n\ndirective @provides(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @requires(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\ntype Post @key(fields: \"id\") {\n  author: User! @requires(fields: \"authorId\")\n  authorId: ID! @external\n  id: ID!\n}\n\ntype Query {\n  user(id: ID!): User\n  users: [User!]!\n}\n\ntype User @key(fields: \"id\") {\n  id: ID!\n  name: String!\n}\n\nscalar openfed__FieldSet"
        }
    },
    "version": "9acaf65b-6cd0-4a66-8ef5-8ecf602d9180",
    "subgraphs": [
        {
            "id": "0",
            "name": "posts",
            "routingUrl": "http://localhost:4001/graphql"
        },
        {
            "id": "1",
            "name": "users",
            "routingUrl": "http://localhost:4002/graphql"
        }
    ],
    "compatibilityVersion": "1:0.43.3"
}